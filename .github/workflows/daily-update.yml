name: Daily Update

on:
  push:
    branches:
    - main
  schedule:
  - cron: '30 4 * * *'
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force update all configs'
        required: false
        default: false
        type: boolean

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Shanghai

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Process Icons and Generate All JSON Files
      id: process_icons
      run: |
        echo "### 🚀 Starting Unified Icon Processing (Python)..."
        # 将 github.repository 作为参数传递给脚本
        python main.py "${{ github.repository }}"
      env:
        GITHUB_EVENT_NAME: ${{ github.event_name }}

    - name: Generate README.md
      shell: bash
      run: |
        echo "### 📚 Generating README.md"
        # README 生成逻辑保持不变，因为 config.csv 格式没有变
        TABLE_TMP_FILE=$(mktemp)
        trap 'rm -f -- "$TABLE_TMP_FILE"' EXIT
        echo "| 配置名称 | CDN 链接 |" > "$TABLE_TMP_FILE"
        echo "|:---|:---|" >> "$TABLE_TMP_FILE"
        grep -v '^\s*#' config.csv | grep -v '^\s*$' | while IFS=, read -r comment src_url path; do
          comment=$(echo "$comment" | xargs); path=$(echo "$path" | xargs)
          if [[ -n "$path" ]]; then
            cdn_link="https://cdn.jsdelivr.net/gh/${{ github.repository }}@main/$path"
            echo "| $comment | [\`$path\`]($cdn_link) |" >> "$TABLE_TMP_FILE"
          fi
        done
        SOURCE_LIST=$(awk -F'[[:space:]]*,[[:space:]]*' '!/^#/ && NF > 2 {url = $2; if (match(url, /(github\.com|raw\.githubusercontent\.com)\/([^\/]+)\/([^\/]+)/, parts)) {author = parts[2]; repo = parts[3]; if (!seen[author]++) {printf "- **%s**: [`%s`](https://github.com/%s/%s)\n", author, repo, author, repo}}}' config.csv | sort -u)
        cat > README.md <<EOF
        # Emby Icons CDN Collection

        本仓库旨在收集并归集各类 Emby 图标集，利用 jsDelivr CDN 提供稳定、高速的访问服务。**所有图标资源均已下载并存储在本仓库内，确保长期可用。**

        ## 🌟 All-in-One 超级合集

        | 配置名称 | CDN 链接 | 说明 |
        |:---|:---|:---|
        | 全部图标合集 | [\`icons/allinone.json\`](https://cdn.jsdelivr.net/gh/${{ github.repository }}@main/icons/allinone.json) | 🎯 整合所有图标源，图片已全部下载至本仓库并进行MD5去重，通过 jsDelivr CDN 加速。 |

        ## 📁 分类图标配置文件

        $(cat "$TABLE_TMP_FILE")

        ## 🚀 使用方法

        直接复制上表中您需要的 CDN 链接，在支持该格式的客户端中进行配置即可。

        ### 示例

        \`\`\`txt
        https://cdn.jsdelivr.net/gh/${{ github.repository }}@main/icons/baiitang_yuan_tubiao.json
        \`\`\`

        所有图标图片资源托管于 [\`icons/assets\`](icons/assets) 目录。

        ## 📋 来源和致谢

        本仓库收集了多个开源图标源，感谢以下作者和项目的贡献：

        ${SOURCE_LIST}

        ## 🔄 更新机制

        - **定时更新**: 每日自动执行，同步上游变更。
        - **手动触发**: 可在 Actions 页面手动运行此工作流，立即获取最新图标。
        - **推送更新**: 向 \`main\` 分支的任何推送都会触发更新。

        ## 🤝 贡献

        欢迎通过 Pull Request 或 Issue 添加新的图标源。请按以下格式编辑 \`config.csv\` 文件：

        \`\`\`csv
        # 格式: 配置名称, 源URL, 在本仓库的目标路径
        My Favorite Icons, https://example.com/icons/tubiao.json, icons/my_favorite_tubiao.json
        \`\`\`

        *This README is automatically generated by actions workflow.*
        EOF

    - name: Commit and push changes
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add -A
        if git diff --staged --quiet; then
          echo "No changes to commit."
          exit 0
        fi
        git commit -F commit_message.txt
        git push
